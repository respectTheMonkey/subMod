name: Update Static Files

on:
  push:
    branches:
      - main  # Or any branch you'd like to trigger this on

permissions:
  contents: write  # Grant write access to contents (for pushing commits)
  
jobs:
  update-static:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Git
      run: |
        git config --global user.name "respectTheMonkey"
        git config --global user.email "smkvr98+dpd@gmail.com"
        git pull
        
    - name: Read submodules.txt and process each submodule
      run: |
        # Create an array from the submodules.txt file
        while IFS= read -r line; do
          # Skip empty lines or comment lines
          if [[ -z "$line" || "$line" == \#* ]]; then
            continue
          fi
          
          # Extract repository URL, branch, and folder paths
          repo_url=$(echo $line | awk '{print $1}')
          branch=$(echo $line | awk '{print $2}')
          folders=$(echo $line | cut -d' ' -f3-)

          # Clone the repository with sparse-checkout
          repo_name=$(basename $repo_url .git)
          git clone --filter=blob:none --no-checkout $repo_url
          cd $repo_name
          
          # Checkout the specified branch
          git checkout $branch
          
          # Initialize sparse-checkout and set required folders
          git sparse-checkout init --cone
          for folder in $folders; do
            git sparse-checkout set $folder
          done
          
          cd ..
          
          # Move the required folders to the target directory
          for folder in $folders; do
            target_dir="resources/$(basename $repo_name)/$folder"
            if [ ! -d "$target_dir" ]; then
              mkdir -p "$target_dir"
            fi
            
            if ! diff -r "$repo_name/$folder" "$target_dir" >/dev/null 2>&1; then
              rm -rf "$target_dir"
              mv "$repo_name/$folder" "$(dirname $target_dir)"
            fi
          done

          # Clean up
          rm -rf $repo_name
        done < submodules.txt

    - name: Commit and push changes
      run: |
        git add .
        git commit -m "Update sparse-checkout config with new repos" || echo "No changes to commit"
        git push origin main
